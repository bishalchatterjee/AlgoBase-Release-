<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/theme_back">

    <ScrollView
        android:id="@+id/scrollView4"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginTop="200dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        android:scrollbars="none"
        android:overScrollMode="never">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:fontFamily="@font/helveticabold"
                android:layout_marginTop="20dp"
                android:text="WHAT IS QUEUE?"
                android:layout_marginStart="20dp"
                android:textColor="@color/theme_text"
                android:textIsSelectable="false"
                android:textSize="20dp" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="20dp"
                android:fontFamily="@font/helvetica"
                android:text="A Queue is a linear structure which follows a particular order in which the operations are performed. The order is First In First Out (FIFO). A good example of a queue is any queue of consumers for a resource where the consumer that came first is served first. The difference between stacks and queues is in removing. In a stack we remove the item the most recently added; in a queue, we remove the item the least recently added."
                android:textColor="@color/theme_text"
                android:textIsSelectable="false"
                android:textSize="20dp" />
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:fontFamily="@font/helveticabold"
                android:layout_marginTop="20dp"
                android:text="WHAT IS DEQUE?"
                android:layout_marginStart="20dp"
                android:textColor="@color/theme_text"
                android:textIsSelectable="false"
                android:textSize="20dp" />
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="20dp"
                android:fontFamily="@font/helvetica"
                android:text="Deque or Double Ended Queue is a generalized version of Queue data structure that allows insert and delete at both ends."
                android:textColor="@color/theme_text"
                android:textIsSelectable="false"
                android:textSize="20dp" />




        </LinearLayout>
    </ScrollView>

    <ImageView
        android:id="@+id/imageView13"
        android:layout_width="310dp"
        android:layout_height="171dp"
        app:layout_constraintBottom_toTopOf="@+id/scrollView4"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.584"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="1.0"
        app:srcCompat="@drawable/queuedequeue_info_banner" />
</androidx.constraintlayout.widget.ConstraintLayout>